package Interfaces;

import org.w3c.dom.ranges.RangeException;

import Enumerations.AgeRestriction;

public abstract class Product implements Buyable {
	private String name;
	private double price;
	private double quantity;
	private AgeRestriction ageRestriction;
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		if (name == null || name.length() == 0) {
			throw new IllegalArgumentException("Product name cannot be empty.");
		}
		this.name = name;
	}
	public double getPrice() {
		if (price < 0) {
			throw new IllegalArgumentException("The price of product should be a non-negative number.");
		}
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public double getQuantity() {
		return quantity;
	}
	public void setQuantity(double quantity) {
		this.quantity = quantity;
	}
	public AgeRestriction getAgeRestriction() {
		return ageRestriction;
	}
	public void setAgeRestriction(AgeRestriction ageRestriction) {
		this.ageRestriction = ageRestriction;
	}
	
}
